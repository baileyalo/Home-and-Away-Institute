


	//import the packages for using the classes in them into the program

	import homeandaway.Course;

import javax.swing.*;
	import java.awt.*;
	import java.awt.event.ActionEvent;
	import java.awt.event.ActionListener;
	import java.sql.Connection;
	import java.sql.DriverManager;
import java.sql.PreparedStatement;
	

	/**
	 *A public class
	 */
	public class AddCourse extends JInternalFrame {

	    /***************************************************************************
	     ***      declaration of the private variables used in the program       ***
	     ***************************************************************************/

	    //for creating the North Panel
	    private JPanel northPanel = new JPanel();
	    //for creating the North Label
	    private JLabel northLabel = new JLabel("COURSE INFORMATION");

	    //for creating the Center Panel
	    private JPanel centerPanel = new JPanel();
	    //for creating an Internal Panel in the center panel
	    private JPanel informationLabelPanel = new JPanel();

	    //for creating an array of JLabel
	    private JLabel[] informationLabel = new JLabel[10];
	    private JLabel lblCode = new JLabel(" Course Code");
	    private JTextField txtCode = new JTextField();
	    //for creating an array of String
	    private String[] informationString = {
	        " The Course Name: ",
	        " The Number of Credits: ", " The Course Duration: ",
	        " The Course Description: "
	    };
	    //for creating an Internal Panel in the center panel
	    private JPanel informationTextFieldPanel = new JPanel();
	    //for creating an array of JTextField
	    private JTextField[] informationTextField = new JTextField[10];

	    //for creating an Internal Panel in the center panel
	    private JPanel insertInformationButtonPanel = new JPanel();
	    //for creating a button
	    private JButton insertInformationButton = new JButton("Insert the Information");

	    //for creating South Panel
	    private JPanel southPanel = new JPanel();
	    //for creating a button
	    private JButton OKButton = new JButton("Exit");

	    //create objects from another classes for using them in the ActionListener
	    private Course course;
	    //for creating an array of string to store the data
	    private String[] data;
	    //for setting available option to true
	    private boolean availble = true;

	    //for checking the information from the text field
	    public boolean isCorrect() {
	        data = new String[10];
	        for (int i = 0; i < informationLabel.length; i++) {
	            if (!informationTextField[i].getText().equals("")) {
	                data[i] = informationTextField[i].getText();
	            } else {
	                return false;
	            }
	        }
	        return true;
	    }

	    //for setting the array of JTextField to empty
	    public void clearTextField() {
	        for (int i = 0; i < informationTextField.length; i++) {
	            informationTextField[i].setText(null);
	        }
	        txtCode.setText(null);
	    }

	    //constructor of addCourse
	    public AddCourse() {
	        //for setting the title for the internal frame
	        super("Add Course", false, true, false, true);
	        //for setting the icon
	        setFrameIcon(new ImageIcon(ClassLoader.getSystemResource("images/Add16.gif")));
	        //for getting the graphical user interface components display area
	        Container cp = getContentPane();

	        //for setting the layout
	        northPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
	        //for setting the font for the North Panel
	        northLabel.setFont(new Font("Tahoma", Font.BOLD, 14));
	        //for adding the label in the North Panel
	        northPanel.add(northLabel);
	        //for adding the north panel to the container
	        cp.add("North", northPanel);

	        //for setting the layout
	        centerPanel.setLayout(new BorderLayout());
	        //for setting the border to the panel
	        centerPanel.setBorder(BorderFactory.createTitledBorder("Add a new Course:"));
	        //for setting the layout
	        informationLabelPanel.setLayout(new GridLayout(11, 1, 1, 1));
	        /***********************************************************************
	         * for adding the strings to the labels, for setting the font 		   *
	         * and adding these labels to the panel.							   *
	         * finally adding the panel to the container						   *
	         ***********************************************************************/
	        for (int i = 0; i < informationLabel.length; i++) {
	            informationLabelPanel.add(informationLabel[i] = new JLabel(informationString[i]));
	            informationLabel[i].setFont(new Font("Tahoma", Font.BOLD, 11));
	        }
	        centerPanel.add("West", informationLabelPanel);

	        //for setting the layout
	        informationTextFieldPanel.setLayout(new GridLayout(11, 1, 1, 1));
	        /***********************************************************************
	         * for adding the strings to the labels, for setting the font 		   *
	         * and adding these labels to the panel.							   *
	         * finally adding the panel to the container						   *
	         ***********************************************************************/
	        for (int i = 0; i < informationTextField.length; i++) {
	            informationTextFieldPanel.add(informationTextField[i] = new JTextField(25));
	            informationTextField[i].setFont(new Font("Tahoma", Font.PLAIN, 11));
	        }
	        lblCode.setFont(new Font("Tahoma", Font.BOLD, 11));
	        informationLabelPanel.add(lblCode);
	        txtCode.setFont(new Font("Tahoma", Font.PLAIN, 11));
	        informationTextFieldPanel.add(txtCode);
	        centerPanel.add("East", informationTextFieldPanel);

	        /***********************************************************************
	         * for setting the layout for the panel,setting the font for the button*
	         * and adding the button to the panel.								   *
	         * finally adding the panel to the container						   *
	         ***********************************************************************/
	        insertInformationButtonPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));
	        insertInformationButton.setFont(new Font("Tahoma", Font.BOLD, 11));
	        insertInformationButtonPanel.add(insertInformationButton);
	        centerPanel.add("South", insertInformationButtonPanel);
	        cp.add("Center", centerPanel);

	        /***********************************************************************
	         * for setting the layout for the panel,setting the font for the button*
	         * adding the button to the panel & setting the border.				   *
	         * finally adding the panel to the container						   *
	         ***********************************************************************/
	        southPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));
	        OKButton.setFont(new Font("Tahoma", Font.BOLD, 11));
	        southPanel.add(OKButton);
	        southPanel.setBorder(BorderFactory.createEtchedBorder());
	        cp.add("South", southPanel);

	        /***********************************************************************
	         * for adding the action listener to the button,first the text will be *
	         * taken from the JTextField[] and make the connection for database,   *
	         * after that update the table in the database with the new value      *
	         ***********************************************************************/
	        insertInformationButton.addActionListener(new ActionListener() {

	            public void actionPerformed(ActionEvent ae) {

	                //for checking if there is a missing information
	                if (isCorrect()) {
	                    Thread runner = new Thread() {

	                        public void run() {
	                            course = new Course();
	                            //for checking if there is no double information in the database
	                            course.connection("SELECT CourseName FROM Course WHERE Code = '" + data[0] + "'");//check this statement
	                            String Code = course.getCode();
	                            if (!data[1].equalsIgnoreCase(Code)) {
	                                try{
	                                    String sql="INSERT INTO Course (Code,CourseName,Credits,Description,Duration) VALUES "+
	                                        " (?,?,?,?,?)";
	                                        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
	                                        Connection con=DriverManager.getConnection("jdbc:odbc:HaiDatabase");
	                                        PreparedStatement ps=con.prepareStatement(sql);
	                                        ps.setString(1, data[0]);
	                                        ps.setString(2, data[1]);
	                                 
	                                        ps.setInt(3,Integer.parseInt(data[2]));
	                                       
	                                        ps.setString(4, data[3]);
	                                       
	                                        ps.setString(5, data[4]);
	                                        
	                                        ps.executeUpdate();      
	                                }catch(Exception ex){
	                                    JOptionPane.showMessageDialog(null, ex.toString());
	                                }
	                                
	                                /*String sql="INSERT INTO Books (Code,CourseName,Credits,Description,Duration) VALUES ('" +
	                                        data[0] + "','" + data[1] + "','" + data[2] + "','" +
	                                        data[3] + "', " + data[4] + ")";
	                                course.update(sql);*/
	                                //JOptionPane.showMessageDialog(null, sql);
	                                //for setting the array of JTextField to empty
	                                clearTextField();
	                            } else {
	                                JOptionPane.showMessageDialog(null, "The Course is already added", "Error", JOptionPane.ERROR_MESSAGE);
	                            }
	                        }
	                    };
	                    runner.start();
	                } //if there is a missing data, then display Message Dialog
	                else {
	                    JOptionPane.showMessageDialog(null, "Please, complete the information", "Warning", JOptionPane.WARNING_MESSAGE);
	                }
	            }
	        });
	        //for adding the action listener for the button to dispose the frame
	        OKButton.addActionListener(new ActionListener() {

	            public void actionPerformed(ActionEvent ae) {
	                dispose();
	            }
	        });
	        //for setting the visible to true
	        setVisible(true);
	        //show the internal frame
	        pack();
	    }
	    public static void main (String args []){
	    	AddCourse addCourse = new AddCourse ();
	  
	    }
	}